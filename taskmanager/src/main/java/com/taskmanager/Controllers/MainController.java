package com.taskmanager.Controllers;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.taskmanager.Entitys.Tasks;
import com.taskmanager.Entitys.User;
import com.taskmanager.Repositorys.TaskRepository;
import com.taskmanager.Repositorys.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * Created by carel on 2017/06/11.
 */
@Controller    // This means that this class is a Controller
@RequestMapping(path="/tasks") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;
    @Autowired
    private TaskRepository taskRepository;
    final Logger logger = LoggerFactory.getLogger(this.getClass());
    @GetMapping(path="/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        logger.debug("User added with Username : " + name + " email : " + email);
        return "Saved";
    }

    @GetMapping(path="/addtask") // Map ONLY GET Requests
    public @ResponseBody
    String addtask (@RequestParam Integer userID
            , @RequestParam String taskName , @RequestParam String description , @RequestParam Integer progress) {
        try {
            Tasks t = new Tasks();
            t.setUserID(userID);
            System.out.println(userID);
            t.setTaskName(taskName);
            System.out.println(taskName);
            t.setDescription(description);
            System.out.println(description);
            t.setProgress(progress);
            System.out.println(progress);
            taskRepository.save(t);
            return "Done";
        }
        catch (Exception e){
            e.printStackTrace();
            return "Fail : " + e.toString();
        }
    }

    @GetMapping(path="/allusers")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
    @GetMapping(path="/allTasks")
    public @ResponseBody Iterable<Tasks> getAllTasks() {
        // This returns a JSON or XML with the users
        return taskRepository.findAll();
    }
}
